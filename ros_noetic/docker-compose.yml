version: "2.3"
services:

  # bash
  bash:
    container_name: bash
    image: ros:noetic
    network_mode: "host"
    command: bash -c "bash"
    working_dir: /root/
    volumes:
      - ./catkin_ws:/root/catkin_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /dev/input:/dev/input
      - /dev/bus/usb/:/dev/bus/usb/:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
    environment:
      - XAUTHORITY=/tmp/.docker.xauth
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
      - ROS_HOST_NAME=${ROS_HOST_NAME}
    privileged: true
    stdin_open: true
    tty: true

  bash-gpu:
    container_name: bash
    image: ros:noetic
    network_mode: "host"
    runtime: nvidia
    command: bash -c "bash"
    working_dir: /root/
    volumes:
      - ./catkin_ws:/root/catkin_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /dev/input:/dev/input
      - /dev/bus/usb/:/dev/bus/usb/:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - XAUTHORITY=/tmp/.docker.xauth
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
      - ROS_HOST_NAME=${ROS_HOST_NAME}
    deploy:
        resources:
            reservations:
                devices:
                    - capabilities: [gpu]
    privileged: true
    stdin_open: true
    tty: true

  # GPUテスト
  test-gpu:
    container_name: test-gpu
    image: ros:noetic
    network_mode: "host"
    runtime: nvidia
    command: nvidia-smi
    working_dir: /root/
    volumes:
      - ./catkin_ws:/root/catkin_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /dev/input:/dev/input
      - /dev/bus/usb/:/dev/bus/usb/:rw
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=all
      - XAUTHORITY=/tmp/.docker.xauth
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
      - ROS_HOST_NAME=${ROS_HOST_NAME}
    deploy:
        resources:
            reservations:
                devices:
                    - capabilities: [gpu]
    privileged: true
    stdin_open: true
    tty: true

  # build
  catkin-build:
    container_name: catkin-build
    image: ros:noetic
    working_dir: /root/catkin_ws
    #command: bash -c "catkin build"
    command: bash -c "catkin build -DCMAKE_BUILD_TYPE=Release"
    #command: bash -c "cd catkin_ws && catkin build"
    volumes:
      - ./catkin_ws:/root/catkin_ws
    tty: true

  # master
  master:
    container_name: master
    image: ros:noetic
    network_mode: "host"
    command: roscore
    environment:
      - ROS_IP=${ROS_IP}
      - ROS_HOST_NAME=${ROS_HOST_NAME}
    tty: true

  # rviz
  rviz:
    container_name: rviz
    image: ros:noetic
    network_mode: "host"
    command: bash -c 'rviz'
    volumes:
      - ./catkin_ws:/root/catkin_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /dev/input:/dev/input
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
    environment:
      - XAUTHORITY=/tmp/.docker.xauth
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
      - ROS_HOST_NAME=${ROS_HOST_NAME}
    privileged: true
    tty: true

  # rqt
  rqt:
    container_name: rqt
    image: ros:noetic
    network_mode: "host"
    command: bash -c 'rqt'
    volumes:
      - ./catkin_ws:/root/catkin_ws
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - /etc/localtime:/etc/localtime:ro
      - /dev/input:/dev/input
      - /tmp/.docker.xauth:/tmp/.docker.xauth:rw
    environment:
      - XAUTHORITY=/tmp/.docker.xauth
      - DISPLAY
      - QT_X11_NO_MITSHM=1
      - ROS_MASTER_URI=${ROS_MASTER_URI}
      - ROS_IP=${ROS_IP}
      - ROS_HOST_NAME=${ROS_HOST_NAME}
    privileged: true
    tty: true